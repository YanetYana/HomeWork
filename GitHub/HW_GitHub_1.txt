
GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер.
	git clone "link to the repository from GitHub"

 6. Внутри локального JSON создать файл “new.json”.
	cd JSON
	touch new.json
	
 7. Добавить файл под гит.
	git add new.json

 8. Закоммитить файл.
	git commit -m "add json file"
	
 9. Отправить файл на внешний GitHub репозиторий.
	git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
     (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
     Всё написать в формате JSON.
	vim new.json
	i
	{
  	"name": "Yana",
  	"age": 41,
 	"pets": 0,
 	"salary": 800
	}
	Esc
	:wq

 11. Отправить изменения на внешний репозиторий.
	git commit -am "update json file"
	git push

 12. Создать файл preferences.json
	cat > preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях 
     (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели 
     бы посетить) в формате JSON.
	{
	  "favorite movie": "Terminator 3",
	  "favorite series": "Friends",
	  "favorite food": "Dessert",
	  "favorite season": "spring",
	  "country to visit": "Spaine"
	}
	
 14. Создать файл sklls.json добавить информацию о скиллах которые 
     будут изучены на курсе в формате JSON
	cat > skill.json
	{ 
	 "skill": "Postman",
	 "skill": "Jmeter",
	 "skill": "CheckList",
	 "skill": "BugReport",
	 "skill": "SQL",
	 "skill": "Charles",
	 "skill": "Mobile testing"
	}	

 15. Отправить сразу 2 файла на внешний репозиторий. 
	git add .
	git commit -m "add two files"
	git push

 16. На веб интерфейсе создать файл bug_report.json.
	add file > create new file >   bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	{
	 "ID":"",
	 "Summar":
	 "Incident Description":"",
	 "Pre-Conditions":"",
	 "Steps to reproduce":"",
	 "Actual result":"",
	 "Expected result":"",
	 "Environment":"",
	 "Build":"",
	 "Attempt to repeat":"",
	 "Impact":"",
	 "Severity":"",
	 "Priority":"",
	 "Attachment":""
	}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit new file"

 20. Синхронизировать внешний и локальный репозиторий JSON
	fit fetch 
	git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
	git clone "link to the repository from GitHub"

 23. Внутри локального XML создать файл “new.xml”.
	cd XML
	touch new.xml
	
 24. Добавить файл под гит.
	git add new.xml 

 25. Закоммитить файл.
	git commit -m "add new xml file"

 26. Отправить файл на внешний GitHub репозиторий.
	git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
     (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
     Всё написать в формате XML.
	vim new.xml 
	i

   <resume>
	<name>Yana</name>
  	<age>41</age>
 	<pets>0</pets>
 	<salary>600</salery>
   </resume>
	
	Esc
	wq

 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -am "update new xml file"
	git push
	
 29. Создать файл preferences.xml
	touch preferences.xml
	
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
     (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона 
     которую хотели бы посетить) в формате XML.
	cat >> preferences.xml
	<preferences> 
	  <favorite_movie>Terminator_3</favorite_movie>
	  <favorite_series>Friends</favorite_series>
	  <favorite_food>Dessert</favorite_food>
	  <favorite_season>spring</favorite_season>
	  <country_to_visit>Spaine</country_to_visit>
	</preferences>

 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены 
     на курсе в формате XML
	cat > skills.xml
	<skills> 
	  <skill>Postman</skill>
	  <skill>Jmeter</skill>
	  <skill>CheckList</skill>
	  <skill>BugReport</skill>
	  <skill>SQL</skill>
	  <skill>Charles</skill>
	  <skill>Mobile testing</skill>
	</skills>

 32. Сделать коммит в одну строку.
	git commit -m "add preferences & skills files"
	
 33. Отправить сразу 2 файла на внешний репозиторий.
	git push

 34. На веб интерфейсе создать файл bug_report.xml.
	add file > create new file >   bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit new file"
	
 36. На веб интерфейсе модифицировать файл bug_report.xml, 
     добавить баг репорт в формате XML. 
	<Bug_Report>
	  <ID></ID> 
	  <Summary></Summary>
	  <Incident_Description></Incident_Description>
	  <Pre-Conditions></Pre-Conditions>
	  <Steps_to_reproduce></Steps_to_reproduce>
	  <Actual_result></Actual_result>
	  <Expected_result></Expected_result>
	  <Environment></Environment>
	  <Build></Build>
	  <Attempt_to_repeat></Attempt_to_repeat>
	  <Impact></Impact>
	  <Severity></Severity>
	  <Priority></Priority>
	  <Attachment></Attachment>
	</Bug_Report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit new file"

 38. Синхронизировать внешний и локальный репозиторий XML
	git fetch
	git pull