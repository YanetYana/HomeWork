
JSON
 1. Создать внешний репозиторий c названием JSON.
 2. Клонировать репозиторий JSON на локальный компьютер.
	git clone "link to the repository from GitHub"

 3. Внутри локального JSON создать файл “new.json”.
	cd JSON
	touch new.json
	
 4. Добавить файл под гит.
	git add new.json

 5. Закоммитить файл.
	git commit -m "add json file"
	
 6. Отправить файл на внешний GitHub репозиторий.
	git push

 7. Отредактировать содержание файла “new.json” - написать информацию о себе 
     (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
     Всё написать в формате JSON.
	vim new.json
	i
	{
  	"name": "Yana",
  	"age": 41,
 	"pets": 0,
 	"salary": 800
	}
	Esc
	:wq

 8. Отправить изменения на внешний репозиторий.
	git commit -am "update json file"
	git push

 9. Создать файл preferences.json
	cat > preferences.json

 10. В файл preferences.json добавить информацию о своих предпочтениях 
     (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели 
     бы посетить) в формате JSON.
	{
	  "favorite movie": "Terminator 3",
	  "favorite series": "Friends",
	  "favorite food": "Dessert",
	  "favorite season": "spring",
	  "country to visit": "Spaine"
	}
	
 11. Создать файл sklls.json добавить информацию о скиллах которые 
     будут изучены на курсе в формате JSON
	cat > skill.json
	{ 
	 "skill": "Postman",
	 "skill": "Jmeter",
	 "skill": "CheckList",
	 "skill": "BugReport",
	 "skill": "SQL",
	 "skill": "Charles",
	 "skill": "Mobile testing"
	}	

 12. Отправить сразу 2 файла на внешний репозиторий. 
	git add .
	git commit -m "add two files"
	git push

 13. На веб интерфейсе создать файл bug_report.json.
	add file > create new file >   bug_report.json

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit new file"

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	{
	 "ID":"",
	 "Summar":
	 "Incident Description":"",
	 "Pre-Conditions":"",
	 "Steps to reproduce":"",
	 "Actual result":"",
	 "Expected result":"",
	 "Environment":"",
	 "Build":"",
	 "Attempt to repeat":"",
	 "Impact":"",
	 "Severity":"",
	 "Priority":"",
	 "Attachment":""
	}
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit changes"

 17. Синхронизировать внешний и локальный репозиторий JSON
	fit fetch 
	git pull

XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
	git clone "link to the repository from GitHub"

 23. Внутри локального XML создать файл “new.xml”.
	cd XML
	touch new.xml
	
 24. Добавить файл под гит.
	git add new.xml 

 25. Закоммитить файл.
	git commit -m "add new xml file"

 26. Отправить файл на внешний GitHub репозиторий.
	git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
     (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
     Всё написать в формате XML.
	vim new.xml 
	i
   <resume>
	<name>Yana</name>
  	<age>41</age>
 	<pets>0</pets>
 	<salary>600</salery>
   </resume>
	
	Esc
	wq

 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -am "update new xml file"
	git push
	
 29. Создать файл preferences.xml
	touch preferences.xml
	
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
     (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона 
     которую хотели бы посетить) в формате XML.
	cat >> preferences.xml
	<preferences> 
	  <favorite_movie>Terminator_3</favorite_movie>
	  <favorite_series>Friends</favorite_series>
	  <favorite_food>Dessert</favorite_food>
	  <favorite_season>spring</favorite_season>
	  <country_to_visit>Spaine</country_to_visit>
	</preferences>

 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены 
     на курсе в формате XML
	cat > skills.xml
	<skills> 
	  <skill>Postman</skill>
	  <skill>Jmeter</skill>
	  <skill>CheckList</skill>
	  <skill>BugReport</skill>
	  <skill>SQL</skill>
	  <skill>Charles</skill>
	  <skill>Mobile testing</skill>
	</skills>

 32. Сделать коммит в одну строку.
	git commit -m "add preferences & skills files"
	
 33. Отправить сразу 2 файла на внешний репозиторий.
	git push

 34. На веб интерфейсе создать файл bug_report.xml.
	add file > create new file >   bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit new file"
	
 36. На веб интерфейсе модифицировать файл bug_report.xml, 
     добавить баг репорт в формате XML. 
	<Bug_Report>
	  <ID></ID> 
	  <Summary></Summary>
	  <Incident_Description></Incident_Description>
	  <Pre-Conditions></Pre-Conditions>
	  <Steps_to_reproduce></Steps_to_reproduce>
	  <Actual_result></Actual_result>
	  <Expected_result></Expected_result>
	  <Environment></Environment>
	  <Build></Build>
	  <Attempt_to_repeat></Attempt_to_repeat>
	  <Impact></Impact>
	  <Severity></Severity>
	  <Priority></Priority>
	  <Attachment></Attachment>
	</Bug_Report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit changes"

 38. Синхронизировать внешний и локальный репозиторий XML
	git fetch
	git pull

TXT
 1. Создать внешний репозиторий c названием TXT. 
	В GitHub New Repository 
 2. Клонировать репозиторий TXT на локальный компьютер.
	в терминале командой git clone <ссылка на репозиторий>

 3. Внутри локального TXT создать файл “new.txt”.
	touch new.txt
 4. Добавить файл под гит.
	git add new.txt

 5. Закоммитить файл.
	git commit -m "add txt file"

 6. Отправить файл на внешний GitHub репозиторий.
	git push 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе 
    (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
    Всё написать в формате TXT.
	cat >> new.txt
	name - Yana,
	age - 41,
	pets - 0,
	salary - 800
	
 8. Отправить изменения на внешний репозиторий.
	git commit -am "updat txfile"
	git push

 9. Создать файл preferences.txt
	touch preferences.txt
	 
 10. В файл preferences.txt” добавить информацию о своих предпочтениях 
     (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона 
     которую хотели бы посетить) в формате TXT.
	cat >> preferences.txt
	favorite movie - Terminator 3
	favorite series - Friends
	favorite food - Dessert
	favorite season - spring
	country to visit - Spaine
	
 11. Создать файл sklls.txt добавить информацию о скиллах которые 
     будут изучены на курсе в формате TXT
	cat > skills.txt 
	Postman
	Jmeter
	CheckList
	BugReport
	SQL
	Charles
	Mobile testing
	
 12. Сделать коммит в одну строку.
	git add .
	git commit -m "add preferences skills files"

 13. Отправить сразу 2 файла на внешний репозиторий.
	git push 

 14. На веб интерфейсе создать файл bug_report.txt.
	add file > create new file >   bug_report.txt
	
	
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
	1.ID
	2.Summary
	3.Incident Description
	4.Pre-Conditions
	5.Steps to reproduce
	6.Actual result
	7.Expected result
	8.Environment
	9.Build
	10.Attempt to repeat
	11.Impact
	12.Severity
	13.Priority
	14.Attachment
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	push butom "Commit changes"
 18. Синхронизировать внешний и локальный репозиторий TXT
	git fetch
	git pull
